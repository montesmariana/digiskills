[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Digital Skills Space",
    "section": "",
    "text": "This site will collect news and some notes on what we talk about in different sessions.\n\n\nPrevious sessions\n\n\n\n\n\n\n\n\n\n\n\nFourth session: 2022-10-14\n\n\n\n\n\n\n\nsession\n\n\nvisualization\n\n\nr\n\n\ngit\n\n\nlatex\n\n\n\n\nOn the fourth session we talked about plot texts in ggplot and turning R projects into git repositories.\n\n\n\n\n\n\nOct 14, 2022\n\n\nMariana Montes\n\n\n\n\n\n\n\n\nThird session: 2022-10-07\n\n\n\n\n\n\n\nsession\n\n\nr\n\n\npython\n\n\ngit\n\n\n\n\nOn the third session we talked about R Projects, Git and Python virtual environments.\n\n\n\n\n\n\nOct 7, 2022\n\n\nMariana Montes\n\n\n\n\n\n\n\n\nSecond session: 2022-09-30\n\n\n\n\n\n\n\nsession\n\n\nquarto\n\n\ncitations\n\n\ngit(hub)\n\n\n\n\nOn the second session we talked about Quarto and citing R packages.\n\n\n\n\n\n\nOct 2, 2022\n\n\nMariana Montes\n\n\n\n\n\n\n\n\nFirst session: 2022-09-23\n\n\n\n\n\n\n\nsession\n\n\nquarto\n\n\ncitations\n\n\n\n\nOn the first session we talked about R Projects, Quarto and integrating citations from Zotero.\n\n\n\n\n\n\nSep 24, 2022\n\n\nMariana Montes\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Digital Skills Space",
    "section": "",
    "text": "The idea is to carve out a space in our schedules for investing in our digital skills, from managing and processing our data, to exploring it with tables and plots, to reporting it in a reliable and reproducible way. These are tasks that often take a lot of time and bring deep frustration, because we are either not trained at it or the only training we received is abstract and applied to fictitious and/or unrelatable examples. However, well acquired skills can save us a lot of time and effort, so that we can better focus our energies on content and analysis. This is what this space is for.\nIt is organized within the Linguistics Department of the Faculty of Arts, KU Leuven. It takes place every Friday from 11:00 to 13:00.\nFor any questions, please contact Mariana Montes."
  },
  {
    "objectID": "posts/session-20221014/index.html",
    "href": "posts/session-20221014/index.html",
    "title": "Fourth session: 2022-10-14",
    "section": "",
    "text": "Using the {showtext} package to edit the fonts in plots.\nPrinting Chinese characters in PDF output from Quarto.\nDefining the citation style in a Quarto file\nCreating an R project from an existing directory.\n\n\nShowtext package\nWith the {showtext} package it is possible to load a variety of fonts and use them in the texts of your plot. This is particularly useful when writing to PDF from Quarto/Rmarkdown, since the default Latex fonts are serif fonts and the default plot fonts are sans serif (totally different!).\nOur goal was to use Cambria in all plots of a document. The workflow we set on, after installing the package, was the following:\nlibrary(showtext)\nfilter(font_files(), str_starts(family, \"Cam\"))\nfont_add(\"cambria\", \"cambria.ttc\", bold = \"cambriab.ttf\")\nshowtext_auto()\nIn order to find the names of that should go in the font_add() call, we also wrote dplyr::filter(font_files(), stringr::str_starts(family, \"Cam\")) to check the names of font files starting with “Cam”.\nThe showtext_auto() call makes sure that it’s available for the whole document, but we also set a general theme for the plots with ggplot2::theme_set(). The code below makes ggplot::theme_minimal() the default theme for all following plots, with a base font size of 14 and Cambria as the font, thanks to {showtext}.\nlibrary(ggplot2)\ntheme_set(theme_minimal(base_size = 14, base_family = \"cambria\"))\n\n\nChinese characters\nWhereas HTML doesn’t normally give us problems, if we want PDF output from our Quarto/Rmarkdown file that prints Chinese characters, we need to add some latex packages. We can easily solve that by editing the YAML section as follows:\n\nFor a .qmd fileFor an .Rmd file\n\n\nformat:\n  pdf:\n    include-in-header: \n      text: |\n        \\usepackage{fontspec}\n        \\usepackage{xeCJK}\n\n\noutput:\n  bookdown::pdf_document2:\n    extra_dependencies:\n        - fontspec\n        - xeCJK\n\n\n\n\n\nDefining the citation style in a Quarto file\nAs the Quarto docs state, the default citation style in a Quarto document is the Chicago Manual Style. If you want to use a different one, you may simply download a citation stylesheet (for example, from the Zotero repository), add it in your project and call it as the csl element in your YAML:\ncsl: unified-stylesheet-linguistics.csl\n\n\nCreating an R project from an existing directory\nWe were met with the situation where we already had a folder with an R script and some data, but that it wasn’t an R project. It is always possible to create an empty R project and then fill it with your documents, but we can also do it on top of the existing data!\nWhen we create an R project, we have the option to do it “on an existing directory”. We just select that option and choose the path to that directory, and it’s done! The directory has now the appropriate files for an R project.\nHowever, this option does not include the checkbox to turn the project into a git repository. For that purpose (assuming your directory isn’t a repository already), you can use {usethis} functions to set up the repository.\nusethis::use_git() will turn the project into a git repository and populate “.gitignore” with the appropriate file extensions. You will need to restart RStudio to let the Git tab appear. It will also give you the option of immediately staging and committing the existing files. You may do so at that moment or after restarting RStudio via the normal means. Once you have committed some files, you can link the repository to a GitHub remote and push it. One option is to create an empty repository in GitHub itself and follow the instructions to connect them; alternatively you can use usethis::use_github() (recommended: start with usethis::use_github(private = TRUE) if you want your repository to be initially private). If Git already knows you, a repository will be created with the name of your project and your files will be pushed. You’re set to go!"
  },
  {
    "objectID": "posts/session-20220930/index.html",
    "href": "posts/session-20220930/index.html",
    "title": "Second session: 2022-09-30",
    "section": "",
    "text": "In the second session of the Digital Skills Space we talked about:"
  },
  {
    "objectID": "posts/session-20220930/index.html#quarto",
    "href": "posts/session-20220930/index.html#quarto",
    "title": "Second session: 2022-09-30",
    "section": "Quarto",
    "text": "Quarto\nSince most of the people in the second session were not present during the first session, we discussed Quarto again. We talked about how, if you know R Markdown, it will be easy to try out; if you don’t, it might be best go to Quarto directly. Many features that require combinations of {rmarkdown} and other packages are fully covered by Quarto.\nWe also saw an example of a Quarto presentation written in VS Code and using no computations! It did have a mermaid graph :)"
  },
  {
    "objectID": "posts/session-20221007/index.html",
    "href": "posts/session-20221007/index.html",
    "title": "Third session: 2022-10-07",
    "section": "",
    "text": "The R+Git section was related to the Master in Corpus Linguistics course, particularly the Git workflow setting up a project. We also debugged a situation when trying to install R packages that required us to go and remove some temporary files inside of “AppData/Temp”!\nIn Python, we talked about using virtual environments (particularly venv) to keep libraries in one project from affecting libraries on the other. We looked into VS Code features when working with Python and environments, using its terminal and differences between the Command Prompt and the PowerShell in Windows."
  },
  {
    "objectID": "posts/session-20220923/index.html",
    "href": "posts/session-20220923/index.html",
    "title": "First session: 2022-09-23",
    "section": "",
    "text": "In the first session of the Digital Skills Space we talked about:"
  },
  {
    "objectID": "posts/session-20220923/index.html#r-projects",
    "href": "posts/session-20220923/index.html#r-projects",
    "title": "First session: 2022-09-23",
    "section": "R projects",
    "text": "R projects\nHave you ever used R Projects?\nMost of us learn to use R by clicking on an R file (often a script someone else gave us) and letting RStudio open it, or by opening R Studio and just typing it. The working directory will then be the folder where that R file lives. If we want to work on different things at the same time, we’ll have those scripts open simultaneously and they will mingle: the console will be the same, the environment (loaded libraries and variables, functions…) will be the same… that can be very confusing and will certainly mess with the reproducibility of your code.\nAn R Project is a feature of RStudio that helps you keep your code organized in projects. You can open them separately in multiple sessions and manage them with ease, keeping unrelated code and data apart. Moreover, you can get help from packages such as {here}, {targets} and {renv} (see for example my blogpost on this).\nTry working with R Projects, your R experience will be totally different (for the best)!"
  },
  {
    "objectID": "posts/session-20220923/index.html#quarto",
    "href": "posts/session-20220923/index.html#quarto",
    "title": "First session: 2022-09-23",
    "section": "Quarto",
    "text": "Quarto\nQuarto is a pumped-up version of R Markdown: if you know R Markdown, it will be easy to try out; if you don’t, I would suggest you go to Quarto directly. Many features that require combinations of {rmarkdown} and other packages are fully covered by Quarto. Moreover, it does not depend on R; you can also use it with Python, Julia or no code at all!\nInstalling Quarto is quite straightforward; then R Studio identifies it and offers you the option of creating Quarto documents, with a simple template you can render immediately."
  },
  {
    "objectID": "posts/session-20220923/index.html#integrating-quartormarkdown-with-zotero",
    "href": "posts/session-20220923/index.html#integrating-quartormarkdown-with-zotero",
    "title": "First session: 2022-09-23",
    "section": "Integrating Quarto/RMarkdown with Zotero",
    "text": "Integrating Quarto/RMarkdown with Zotero\nThe markup language in Quarto and RMarkdown (markdown) makes it very easy to cite sources, and the compilation takes care of generating the reference list at the end of your document. However, it might be difficult to remember the citation keys of each source you want to cite. For that purpose, the {rbbt} package offers you a connection between R and Better Bibtex for Zotero, letting you choose your sources from a pop-up window and automatically updating your .bib file."
  }
]